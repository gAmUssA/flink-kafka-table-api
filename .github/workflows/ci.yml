name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:dind
        options: --privileged

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Java 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Start Docker daemon
      run: |
        sudo systemctl start docker
        sudo chmod 666 /var/run/docker.sock

    - name: Verify Docker installation
      run: |
        docker --version
        docker info

    - name: Generate Avro sources
      run: mvn generate-sources

    - name: Compile project
      run: mvn compile

    - name: Run tests
      run: mvn test
      env:
        # Ensure TestContainers can access Docker
        TESTCONTAINERS_RYUK_DISABLED: true
        TESTCONTAINERS_CHECKS_DISABLE: true

    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Maven Tests
        path: target/surefire-reports/*.xml
        reporter: java-junit
        fail-on-error: true

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          target/surefire-reports/
          target/site/

    - name: Build application JAR
      run: mvn package -DskipTests

    - name: Upload application artifact
      uses: actions/upload-artifact@v4
      with:
        name: flink-kafka-processor
        path: target/flink-kafka-processor-*.jar

    - name: Check code formatting
      run: mvn spotless:check

  build-docker:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Java 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build application
      run: mvn package -DskipTests

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: |
        cat > Dockerfile << 'EOF'
        FROM eclipse-temurin:17-jre

        # Install required packages
        RUN apt-get update && apt-get install -y \
            curl \
            && rm -rf /var/lib/apt/lists/*

        # Create app directory
        WORKDIR /app

        # Copy the JAR file
        COPY target/flink-kafka-processor-*.jar app.jar

        # Expose port (if needed for Flink Web UI)
        EXPOSE 8081

        # Run the application
        ENTRYPOINT ["java", "-jar", "app.jar"]
        EOF

        docker build -t flink-kafka-processor:latest .

    - name: Save Docker image
      run: docker save flink-kafka-processor:latest | gzip > flink-kafka-processor.tar.gz

    - name: Upload Docker image artifact
      uses: actions/upload-artifact@v4
      with:
        name: docker-image
        path: flink-kafka-processor.tar.gz
